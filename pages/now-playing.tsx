import Head from 'next/head';
import { ROUTES } from 'src/common/constants';
import { NowPlayingContainer } from 'src/now-playing/containers';
import { useEffect } from 'react';
import { useSession } from 'src/session/provider';
import { useRouter } from 'next/router';
import { isArray } from 'lodash';

export default function NowPlaying() {
  const router = useRouter();
  const { isAuthorized } = useSession();
  const { page } = router.query;
  const validPage = page && !isArray(page) && !isNaN(Number(page)) ? page : '';

  // redirect when the path is not valid
  useEffect(() => {
    // qs
    const isCorrectRoute = (() => {
      /**
       * Query parameters are not defined on the first render,
       * so we use URLSearchParams to get parameters on the first render.
       * Details: https://nextjs.org/docs/routing/dynamic-routes#caveats
       */
      const urlSearchParams = new URLSearchParams(window.location.search);
      const params = Object.fromEntries(urlSearchParams.entries());
      const pageNumber = Number(params.page);

      if (pageNumber && 'page' in params && !isNaN(pageNumber)) {
        return true;
      }

      return false;
    })();

    if (!isCorrectRoute && isAuthorized) {
      router.replace(`${ROUTES.NOW_PLAYING.PATH}?${ROUTES.NOW_PLAYING.PARAMS}`);
    }
  }, [isAuthorized]);

  // when we go to the next pagination route, scroll to the top main container
  useEffect(() => {
    const mainContainer = document.getElementById('main');

    if (mainContainer) {
      mainContainer.scrollTo(0, 0);
    }
  }, [router.asPath]);

  return (
    <>
      <Head>
        <title>{ROUTES.NOW_PLAYING.NAME}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <NowPlayingContainer pageNumber={validPage} />
    </>
  );
}
