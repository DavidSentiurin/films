import React, { useEffect } from 'react';
import Head from 'next/head';
import { isArray } from 'lodash';
import { useRouter } from 'next/router';
import { useSession } from 'src/session/provider';
import { ROUTES } from 'src/common/constants';
import { NowPlayingContainer } from 'src/now-playing/containers';
import qs from 'qs';

export default function NowPlaying(): JSX.Element {
  const router = useRouter();
  const { isAuthorized } = useSession();
  const { page } = router.query;
  const validPage =
    page && !isArray(page) && !isNaN(Number(page)) && Number(page) > 0
      ? page
      : '';

  // redirect when the path is not valid
  useEffect(() => {
    const indexOfQueryStart = router.asPath.indexOf('?');
    const params = qs.parse(router.asPath.slice(indexOfQueryStart + 1));

    if (!params.page || (Number(params.page) === 0 && isAuthorized)) {
      params.page = '1';

      router.replace(`${ROUTES.NOW_PLAYING.PATH}?${qs.stringify(params)}`);
    }
  }, [router, validPage, isAuthorized]);

  // when we go to the next pagination route, scroll to the top main container
  useEffect(() => {
    const mainContainer = document.getElementById('main');

    if (mainContainer) {
      mainContainer.scrollTo(0, 0);
    }
  }, [router.asPath]);

  return (
    <>
      <Head>
        <title>{ROUTES.NOW_PLAYING.NAME}</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <NowPlayingContainer pageNumber={validPage} />
    </>
  );
}
